#Each new term in the Fibonacci sequence is generated by adding the previous two terms.
#By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def fibonacci(firstNum, secondNum, end):
    total = 0
    nextNum = 0
    #while we haven't exceeded 4,000,000
    while(nextNum < end):
        #get the third fibonacci number
        nextNum = firstNum + secondNum
        #debugging to see sequence of numbers
        print(str(firstNum) + " " + str(secondNum) + " " + str(nextNum))
        #some variable modded (%) with 2 checks if it's even or not
        if (nextNum % 2 == 0):
            #if it is even, add it to the total
            total += nextNum
        #basically shifting the numbers up the fibonacci sequence
        firstNum = secondNum
        secondNum = nextNum

    #return the sum of the even numbers
    return total

#checking if it works for small bounds that I can calculate in my head :)
print(fibonacci(1, 1, 55))
#solve the actual problem
print(fibonacci(1, 1, 4000000))
